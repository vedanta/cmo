{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","licensePerEpisode","setLicensePerEpisode","useState","numEpisodes","contractLength","setContractLength","upfrontPercent","setUpfrontPercent","sixMonthPercent","setSixMonthPercent","twelveMonthPercent","setTwelveMonthPercent","eighteenMonthPercent","setEighteenMonthPercent","includeSecretSociety","setIncludeSecretSociety","secretSocietyPrice","setSecretSocietyPrice","batnaValue","viewershipRange","setViewershipRange","revenuePerTenMillion","setRevenuePerTenMillion","streamersRevenue","setStreamersRevenue","streamersProfitMargin","setStreamersProfitMargin","baseRevenue","setBaseRevenue","financingCost","setFinancingCost","revenueAfterFinancing","setRevenueAfterFinancing","contractAdjustment","setContractAdjustment","secretSocietyValue","setSecretSocietyValue","netRevenue","setNetRevenue","netValueVsBatna","setNetValueVsBatna","comparisonData","setComparisonData","totalPercent","setTotalPercent","isValidPaymentSchedule","setIsValidPaymentSchedule","scenarioName","setScenarioName","savedScenarios","setSavedScenarios","name","useEffect","calcBaseRevenue","totalFinancingCost","calcRevenueAfterFinancing","adjustment","calcSecretSocietyValue","calcNetRevenue","viewershipLow","viewershipHigh","calculatedStreamersRevenue","value","color","calcTotalPercent","formatNumber","num","Intl","NumberFormat","style","currency","maximumFractionDigits","format","renderComparisonBars","maxValue","Math","max","map","d","React","createElement","item","i","key","marginBottom","display","justifyContent","height","width","backgroundColor","borderRadius","overflow","styles","container","padding","boxShadow","maxWidth","margin","fontFamily","title","fontSize","fontWeight","textAlign","grid","gridTemplateColumns","window","innerWidth","gap","card","subtitle","formGroup","label","input","border","hint","marginTop","formRow","valueDisplay","statLabel","statValue","blueBox","blueText","greenBox","greenText","redBox","redText","button","cursor","buttonGray","table","borderCollapse","tableHeader","tableCell","borderTop","flexRow","flexGrow","type","onChange","e","Number","target","min","alignItems","checked","marginRight","renderPaymentSchedule","payments","filter","p","listStyleType","placeholder","className","onClick","saveScenario","newScenario","disabled","overflowX","scenario","index","loadScenario","step","toFixed","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1d140c32.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // Main inputs\n  const [licensePerEpisode, setLicensePerEpisode] = useState(45000);\n  const [numEpisodes] = useState(100);\n  const [contractLength, setContractLength] = useState(2);\n  \n  // Payment schedule\n  const [upfrontPercent, setUpfrontPercent] = useState(50);\n  const [sixMonthPercent, setSixMonthPercent] = useState(25);\n  const [twelveMonthPercent, setTwelveMonthPercent] = useState(25);\n  const [eighteenMonthPercent, setEighteenMonthPercent] = useState(0);\n  \n  // Secret Society\n  const [includeSecretSociety, setIncludeSecretSociety] = useState(false);\n  const [secretSocietyPrice, setSecretSocietyPrice] = useState(10000);\n  \n  // BATNA\n  const [batnaValue] = useState(2500000);\n  \n  // Streamers Revenue Forecast\n  const [viewershipRange, setViewershipRange] = useState(\"50-60\");\n  const [revenuePerTenMillion, setRevenuePerTenMillion] = useState(1000000);\n  const [streamersRevenue, setStreamersRevenue] = useState(0);\n  const [streamersProfitMargin, setStreamersProfitMargin] = useState(0);\n  \n  // Calculated values\n  const [baseRevenue, setBaseRevenue] = useState(0);\n  const [financingCost, setFinancingCost] = useState(0);\n  const [revenueAfterFinancing, setRevenueAfterFinancing] = useState(0);\n  const [contractAdjustment, setContractAdjustment] = useState(0);\n  const [secretSocietyValue, setSecretSocietyValue] = useState(0);\n  const [netRevenue, setNetRevenue] = useState(0);\n  const [netValueVsBatna, setNetValueVsBatna] = useState(0);\n  \n  // For comparison\n  const [comparisonData, setComparisonData] = useState([]);\n  \n  // For payment schedule validation\n  const [totalPercent, setTotalPercent] = useState(100);\n  const [isValidPaymentSchedule, setIsValidPaymentSchedule] = useState(true);\n  \n  // Scenario parameters\n  const [scenarioName, setScenarioName] = useState('');\n  const [savedScenarios, setSavedScenarios] = useState([\n    {\n      name: 'Minimum Deal',\n      licensePerEpisode: 35000,\n      contractLength: 2,\n      upfrontPercent: 50,\n      sixMonthPercent: 25,\n      twelveMonthPercent: 25,\n      eighteenMonthPercent: 0,\n      includeSecretSociety: false,\n      secretSocietyPrice: 10000,\n      netRevenue: 3025000,\n      netValueVsBatna: 525000\n    },\n    {\n      name: 'Target Deal',\n      licensePerEpisode: 70000,\n      contractLength: 2,\n      upfrontPercent: 50,\n      sixMonthPercent: 25,\n      twelveMonthPercent: 25,\n      eighteenMonthPercent: 0,\n      includeSecretSociety: true,\n      secretSocietyPrice: 15000,\n      netRevenue: 7537500,\n      netValueVsBatna: 5037500\n    }\n  ]);\n  \n  useEffect(() => {\n    // Calculate base revenue\n    const calcBaseRevenue = licensePerEpisode * numEpisodes;\n    setBaseRevenue(calcBaseRevenue);\n    \n    // Calculate financing cost\n    const upfrontCost = 0;\n    const sixMonthCost = (sixMonthPercent / 100) * calcBaseRevenue * 0.2;\n    const twelveMonthCost = (twelveMonthPercent / 100) * calcBaseRevenue * 0.35;\n    const eighteenMonthCost = (eighteenMonthPercent / 100) * calcBaseRevenue * 0.5;\n    const totalFinancingCost = upfrontCost + sixMonthCost + twelveMonthCost + eighteenMonthCost;\n    setFinancingCost(totalFinancingCost);\n    \n    // Calculate revenue after financing\n    const calcRevenueAfterFinancing = calcBaseRevenue - totalFinancingCost;\n    setRevenueAfterFinancing(calcRevenueAfterFinancing);\n    \n    // Calculate contract length adjustment\n    let adjustment = 0;\n    if (contractLength === 1) adjustment = 250000;\n    else if (contractLength === 3) adjustment = -250000;\n    else if (contractLength === 4) adjustment = -500000;\n    setContractAdjustment(adjustment);\n    \n    // Calculate Secret Society value\n    const calcSecretSocietyValue = includeSecretSociety ? secretSocietyPrice * numEpisodes : 0;\n    setSecretSocietyValue(calcSecretSocietyValue);\n    \n    // Calculate net revenue\n    const calcNetRevenue = calcRevenueAfterFinancing + adjustment + calcSecretSocietyValue;\n    setNetRevenue(calcNetRevenue);\n    \n    // Calculate net value vs BATNA\n    setNetValueVsBatna(calcNetRevenue - batnaValue);\n    \n    // Calculate Streamers' projected revenue\n    let viewershipLow, viewershipHigh;\n    switch(viewershipRange) {\n      case \"20-30\":\n        viewershipLow = 20;\n        viewershipHigh = 30;\n        break;\n      case \"30-40\":\n        viewershipLow = 30;\n        viewershipHigh = 40;\n        break;\n      case \"40-50\":\n        viewershipLow = 40;\n        viewershipHigh = 50;\n        break;\n      case \"50-60\":\n        viewershipLow = 50;\n        viewershipHigh = 60;\n        break;\n      case \"60-70\":\n        viewershipLow = 60;\n        viewershipHigh = 70;\n        break;\n      default:\n        viewershipLow = 50;\n        viewershipHigh = 60;\n    }\n    \n    const avgViewership = (viewershipLow + viewershipHigh) / 2;\n    const calculatedStreamersRevenue = avgViewership / 10 * revenuePerTenMillion;\n    setStreamersRevenue(calculatedStreamersRevenue);\n    \n    // Calculate Streamers' profit margin\n    const streamersProfit = calculatedStreamersRevenue - calcBaseRevenue;\n    const profitMargin = (streamersProfit / calculatedStreamersRevenue) * 100;\n    setStreamersProfitMargin(profitMargin);\n    \n    // Update comparison data\n    setComparisonData([\n      {\n        name: 'Current Deal',\n        value: calcNetRevenue,\n        color: '#8884d8'\n      },\n      {\n        name: 'BATNA',\n        value: batnaValue,\n        color: '#82ca9d'\n      }\n    ]);\n    \n    // Validate payment schedule\n    const calcTotalPercent = upfrontPercent + sixMonthPercent + twelveMonthPercent + eighteenMonthPercent;\n    setTotalPercent(calcTotalPercent);\n    setIsValidPaymentSchedule(calcTotalPercent === 100);\n    \n  }, [licensePerEpisode, numEpisodes, contractLength, \n     upfrontPercent, sixMonthPercent, twelveMonthPercent, eighteenMonthPercent,\n     includeSecretSociety, secretSocietyPrice, batnaValue,\n     viewershipRange, revenuePerTenMillion]);\n  \n  const saveScenario = () => {\n    if (!scenarioName) return;\n    \n    const newScenario = {\n      name: scenarioName,\n      licensePerEpisode,\n      contractLength,\n      upfrontPercent,\n      sixMonthPercent,\n      twelveMonthPercent,\n      eighteenMonthPercent,\n      includeSecretSociety,\n      secretSocietyPrice,\n      netRevenue,\n      netValueVsBatna\n    };\n    \n    setSavedScenarios([...savedScenarios, newScenario]);\n    setScenarioName('');\n  };\n  \n  const loadScenario = (scenario) => {\n    setLicensePerEpisode(scenario.licensePerEpisode);\n    setContractLength(scenario.contractLength);\n    setUpfrontPercent(scenario.upfrontPercent);\n    setSixMonthPercent(scenario.sixMonthPercent);\n    setTwelveMonthPercent(scenario.twelveMonthPercent);\n    setEighteenMonthPercent(scenario.eighteenMonthPercent);\n    setIncludeSecretSociety(scenario.includeSecretSociety);\n    setSecretSocietyPrice(scenario.secretSocietyPrice);\n  };\n\n  // Format number for display\n  const formatNumber = (num) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumFractionDigits: 0\n    }).format(num);\n  };\n\n  // Simplified visual for payment schedule (text-based)\n  const renderPaymentSchedule = () => {\n    const payments = [\n      { name: 'Upfront', value: upfrontPercent },\n      { name: '6 Months', value: sixMonthPercent },\n      { name: '12 Months', value: twelveMonthPercent },\n      { name: '18 Months', value: eighteenMonthPercent }\n    ].filter(p => p.value > 0);\n    \n    return (\n      <div>\n        <h3 style={{ marginBottom: '10px' }}>Payment Distribution:</h3>\n        <ul style={{ listStyleType: 'none', padding: 0 }}>\n          {payments.map((p, i) => (\n            <li key={i} style={{ \n              marginBottom: '8px', \n              padding: '8px', \n              backgroundColor: '#f3f4f6',\n              borderRadius: '4px',\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <span>{p.name}:</span>\n              <span><b>{p.value}%</b></span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  // Simplified bar representation for comparison\n  const renderComparisonBars = () => {\n    const maxValue = Math.max(...comparisonData.map(d => d.value));\n    return (\n      <div>\n        {comparisonData.map((item, i) => (\n          <div key={i} style={{ marginBottom: '15px' }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '5px' }}>\n              <div>{item.name}</div>\n              <div>{formatNumber(item.value)}</div>\n            </div>\n            <div style={{ \n              height: '20px', \n              width: '100%', \n              backgroundColor: '#e5e7eb',\n              borderRadius: '4px',\n              overflow: 'hidden'\n            }}>\n              <div style={{ \n                height: '100%', \n                width: `${(item.value / maxValue) * 100}%`,\n                backgroundColor: item.color,\n                borderRadius: '4px'\n              }}></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  // CSS-in-JS styles\n  const styles = {\n    container: {\n      backgroundColor: '#f3f4f6',\n      padding: '24px',\n      borderRadius: '8px',\n      boxShadow: '0 2px 8px rgba(0, 0, 0, 0.15)',\n      maxWidth: '1200px',\n      margin: '0 auto',\n      fontFamily: 'Arial, sans-serif'\n    },\n    title: {\n      fontSize: '24px',\n      fontWeight: 'bold',\n      marginBottom: '24px',\n      textAlign: 'center'\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: window.innerWidth > 768 ? '1fr 1fr' : '1fr',\n      gap: '24px'\n    },\n    card: {\n      backgroundColor: 'white',\n      padding: '16px',\n      borderRadius: '8px',\n      boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n      marginBottom: '24px'\n    },\n    subtitle: {\n      fontSize: '18px',\n      fontWeight: '600',\n      marginBottom: '16px'\n    },\n    formGroup: {\n      marginBottom: '16px'\n    },\n    label: {\n      display: 'block',\n      fontSize: '14px',\n      fontWeight: '500',\n      marginBottom: '4px'\n    },\n    input: {\n      width: '100%',\n      padding: '8px',\n      border: '1px solid #ccc',\n      borderRadius: '4px'\n    },\n    hint: {\n      fontSize: '12px',\n      color: '#6b7280',\n      marginTop: '4px'\n    },\n    formRow: {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr',\n      gap: '16px'\n    },\n    valueDisplay: {\n      padding: '12px',\n      backgroundColor: '#f9fafb',\n      borderRadius: '4px',\n      marginBottom: '10px'\n    },\n    statLabel: {\n      fontSize: '14px',\n      color: '#6b7280'\n    },\n    statValue: {\n      fontSize: '18px',\n      fontWeight: '600'\n    },\n    blueBox: {\n      padding: '16px',\n      backgroundColor: '#eff6ff',\n      borderRadius: '4px',\n      border: '1px solid #bfdbfe',\n      marginBottom: '16px'\n    },\n    blueText: {\n      color: '#1e40af'\n    },\n    greenBox: {\n      padding: '16px',\n      backgroundColor: '#f0fdf4',\n      borderRadius: '4px',\n      border: '1px solid #bbf7d0',\n      marginBottom: '16px'\n    },\n    greenText: {\n      color: '#166534'\n    },\n    redBox: {\n      padding: '16px',\n      backgroundColor: '#fef2f2',\n      borderRadius: '4px',\n      border: '1px solid #fecaca',\n      marginBottom: '16px'\n    },\n    redText: {\n      color: '#b91c1c'\n    },\n    button: {\n      backgroundColor: '#3b82f6',\n      color: 'white',\n      padding: '8px 16px',\n      borderRadius: '4px',\n      border: 'none',\n      cursor: 'pointer'\n    },\n    buttonGray: {\n      backgroundColor: '#e5e7eb',\n      color: '#374151',\n      padding: '4px 8px',\n      borderRadius: '4px',\n      border: 'none',\n      cursor: 'pointer',\n      fontSize: '14px'\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'collapse'\n    },\n    tableHeader: {\n      textAlign: 'left',\n      padding: '8px 12px',\n      backgroundColor: '#f3f4f6'\n    },\n    tableCell: {\n      padding: '8px 12px',\n      borderTop: '1px solid #e5e7eb'\n    },\n    flexRow: {\n      display: 'flex'\n    },\n    flexGrow: {\n      flexGrow: 1\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>CMO Negotiation Calculator</h1>\n      \n      <div style={styles.grid}>\n        <div style={styles.card}>\n          <h2 style={styles.subtitle}>Input Parameters</h2>\n          \n          <div style={styles.formGroup}>\n            <label style={styles.label}>Licensing Fee per Episode:</label>\n            <input\n              type=\"number\"\n              value={licensePerEpisode}\n              onChange={(e) => setLicensePerEpisode(Number(e.target.value))}\n              style={styles.input}\n              min=\"0\"\n            />\n            <div style={styles.hint}>Min: $35,000, Target: $70,000</div>\n          </div>\n          \n          <div style={styles.formGroup}>\n            <label style={styles.label}>Contract Length (years):</label>\n            <select\n              value={contractLength}\n              onChange={(e) => setContractLength(Number(e.target.value))}\n              style={styles.input}\n            >\n              <option value={1}>1 Year (+$250,000)</option>\n              <option value={2}>2 Years (Standard)</option>\n              <option value={3}>3 Years (-$250,000)</option>\n              <option value={4}>4 Years (-$500,000)</option>\n            </select>\n          </div>\n          \n          <div style={styles.formGroup}>\n            <h3 style={{ fontWeight: 'medium', marginBottom: '8px' }}>Payment Schedule:</h3>\n            <div style={{ \n              fontSize: '14px', \n              color: isValidPaymentSchedule ? '#16a34a' : '#dc2626',\n              marginBottom: '8px'\n            }}>\n              Total: {totalPercent}% {isValidPaymentSchedule ? '✓' : '(Must equal 100%)'}\n            </div>\n            \n            <div style={styles.formRow}>\n              <div>\n                <label style={styles.label}>Upfront (%):</label>\n                <input\n                  type=\"number\"\n                  value={upfrontPercent}\n                  onChange={(e) => setUpfrontPercent(Number(e.target.value))}\n                  style={styles.input}\n                  min=\"0\"\n                  max=\"100\"\n                />\n              </div>\n              \n              <div>\n                <label style={styles.label}>6 months (%):</label>\n                <input\n                  type=\"number\"\n                  value={sixMonthPercent}\n                  onChange={(e) => setSixMonthPercent(Number(e.target.value))}\n                  style={styles.input}\n                  min=\"0\"\n                  max=\"100\"\n                />\n              </div>\n              \n              <div>\n                <label style={styles.label}>12 months (%):</label>\n                <input\n                  type=\"number\"\n                  value={twelveMonthPercent}\n                  onChange={(e) => setTwelveMonthPercent(Number(e.target.value))}\n                  style={styles.input}\n                  min=\"0\"\n                  max=\"100\"\n                />\n              </div>\n              \n              <div>\n                <label style={styles.label}>18 months (%):</label>\n                <input\n                  type=\"number\"\n                  value={eighteenMonthPercent}\n                  onChange={(e) => setEighteenMonthPercent(Number(e.target.value))}\n                  style={styles.input}\n                  min=\"0\"\n                  max=\"100\"\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div style={styles.formGroup}>\n            <label style={{ \n              display: 'flex', \n              alignItems: 'center', \n              fontSize: '14px',\n              fontWeight: '500',\n              marginBottom: '4px'\n            }}>\n              <input\n                type=\"checkbox\"\n                checked={includeSecretSociety}\n                onChange={(e) => setIncludeSecretSociety(e.target.checked)}\n                style={{ marginRight: '8px' }}\n              />\n              Include \"The Secret Society\"?\n            </label>\n            \n            {includeSecretSociety && (\n              <div style={{ marginTop: '8px' }}>\n                <label style={styles.label}>Price per Episode:</label>\n                <input\n                  type=\"number\"\n                  value={secretSocietyPrice}\n                  onChange={(e) => setSecretSocietyPrice(Number(e.target.value))}\n                  style={styles.input}\n                  min=\"0\"\n                />\n                <div style={styles.hint}>Current offer: $10,000 per episode</div>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div style={styles.card}>\n          <h2 style={styles.subtitle}>Deal Value</h2>\n          \n          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px', marginBottom: '24px' }}>\n            <div style={styles.valueDisplay}>\n              <div style={styles.statLabel}>Base Revenue:</div>\n              <div style={styles.statValue}>{formatNumber(baseRevenue)}</div>\n            </div>\n            \n            <div style={styles.valueDisplay}>\n              <div style={styles.statLabel}>Financing Cost:</div>\n              <div style={styles.statValue}>{formatNumber(financingCost)}</div>\n            </div>\n            \n            <div style={styles.valueDisplay}>\n              <div style={styles.statLabel}>Contract Adjustment:</div>\n              <div style={styles.statValue}>{formatNumber(contractAdjustment)}</div>\n            </div>\n            \n            <div style={styles.valueDisplay}>\n              <div style={styles.statLabel}>Secret Society Value:</div>\n              <div style={styles.statValue}>{formatNumber(secretSocietyValue)}</div>\n            </div>\n          </div>\n          \n          <div style={{ marginBottom: '24px' }}>\n            <div style={styles.blueBox}>\n              <div style={{ ...styles.statLabel, ...styles.blueText, marginBottom: '4px' }}>Net Revenue:</div>\n              <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{formatNumber(netRevenue)}</div>\n            </div>\n          </div>\n          \n          <div style={{ marginBottom: '24px' }}>\n            <div style={netValueVsBatna >= 0 ? styles.greenBox : styles.redBox}>\n              <div style={{ \n                ...styles.statLabel, \n                color: netValueVsBatna >= 0 ? styles.greenText.color : styles.redText.color,\n                marginBottom: '4px'\n              }}>\n                Net Value vs. BATNA ({formatNumber(batnaValue)}):\n              </div>\n              <div style={{ \n                fontSize: '24px', \n                fontWeight: 'bold',\n                color: netValueVsBatna >= 0 ? styles.greenText.color : styles.redText.color\n              }}>\n                {formatNumber(netValueVsBatna)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div style={styles.grid}>\n        <div style={styles.card}>\n          <h2 style={styles.subtitle}>Payment Schedule</h2>\n          {renderPaymentSchedule()}\n        </div>\n        \n        <div style={styles.card}>\n          <h2 style={styles.subtitle}>Net Revenue vs BATNA</h2>\n          {renderComparisonBars()}\n        </div>\n      </div>\n      \n      <div style={styles.card}>\n        <h2 style={styles.subtitle}>Scenario Manager</h2>\n        \n        <div style={{ ...styles.flexRow, marginBottom: '16px' }}>\n          <input\n            type=\"text\"\n            value={scenarioName}\n            onChange={(e) => setScenarioName(e.target.value)}\n            placeholder=\"Enter scenario name\"\n            style={{ ...styles.input, borderRadius: '4px 0 0 4px' }}\n            className={styles.flexGrow}\n          />\n          <button\n            onClick={saveScenario}\n            style={{ ...styles.button, borderRadius: '0 4px 4px 0' }}\n            disabled={!scenarioName}\n          >\n            Save Current Scenario\n          </button>\n        </div>\n        \n        <div style={{ overflowX: 'auto' }}>\n          <table style={styles.table}>\n            <thead>\n              <tr>\n                <th style={styles.tableHeader}>Scenario</th>\n                <th style={{ ...styles.tableHeader, textAlign: 'right' }}>License Fee</th>\n                <th style={{ ...styles.tableHeader, textAlign: 'center' }}>Years</th>\n                <th style={{ ...styles.tableHeader, textAlign: 'center' }}>Payment</th>\n                <th style={{ ...styles.tableHeader, textAlign: 'center' }}>Secret Society</th>\n                <th style={{ ...styles.tableHeader, textAlign: 'right' }}>Net Revenue</th>\n                <th style={{ ...styles.tableHeader, textAlign: 'right' }}>vs BATNA</th>\n                <th style={styles.tableHeader}></th>\n              </tr>\n            </thead>\n            <tbody>\n              {savedScenarios.map((scenario, index) => (\n                <tr key={index}>\n                  <td style={styles.tableCell}>{scenario.name}</td>\n                  <td style={{ ...styles.tableCell, textAlign: 'right' }}>{formatNumber(scenario.licensePerEpisode)}</td>\n                  <td style={{ ...styles.tableCell, textAlign: 'center' }}>{scenario.contractLength}</td>\n                  <td style={{ ...styles.tableCell, textAlign: 'center' }}>\n                    {scenario.upfrontPercent}/{scenario.sixMonthPercent}/{scenario.twelveMonthPercent}/{scenario.eighteenMonthPercent}\n                  </td>\n                  <td style={{ ...styles.tableCell, textAlign: 'center' }}>{scenario.includeSecretSociety ? 'Yes' : 'No'}</td>\n                  <td style={{ ...styles.tableCell, textAlign: 'right' }}>{formatNumber(scenario.netRevenue)}</td>\n                  <td style={{ \n                    ...styles.tableCell, \n                    textAlign: 'right', \n                    color: scenario.netValueVsBatna >= 0 ? styles.greenText.color : styles.redText.color \n                  }}>\n                    {formatNumber(scenario.netValueVsBatna)}\n                  </td>\n                  <td style={styles.tableCell}>\n                    <button\n                      onClick={() => loadScenario(scenario)}\n                      style={styles.buttonGray}\n                    >\n                      Load\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      \n      <div style={{ ...styles.card, marginTop: '24px' }}>\n        <h2 style={styles.subtitle}>Streamers Revenue Forecast</h2>\n        \n        <div style={{ ...styles.grid, marginBottom: '16px' }}>\n          <div>\n            <div style={styles.formGroup}>\n              <label style={styles.label}>Finale Viewership Range (millions):</label>\n              <select\n                value={viewershipRange}\n                onChange={(e) => setViewershipRange(e.target.value)}\n                style={styles.input}\n              >\n                <option value=\"20-30\">20-30 Million (10% likelihood)</option>\n                <option value=\"30-40\">30-40 Million (10% likelihood)</option>\n                <option value=\"40-50\">40-50 Million (10% likelihood)</option>\n                <option value=\"50-60\">50-60 Million (50% likelihood)</option>\n                <option value=\"60-70\">60-70 Million (20% likelihood)</option>\n              </select>\n            </div>\n            \n            <div style={styles.formGroup}>\n              <label style={styles.label}>Revenue per 10M Viewers:</label>\n              <input\n                type=\"number\"\n                value={revenuePerTenMillion}\n                onChange={(e) => setRevenuePerTenMillion(Number(e.target.value))}\n                style={styles.input}\n                min=\"500000\"\n                max=\"1500000\"\n                step=\"100000\"\n              />\n              <div style={styles.hint}>Range: $500,000 - $1,500,000 per 10M viewers</div>\n            </div>\n            \n            <div style={styles.blueBox}>\n              <div style={{ ...styles.statLabel, ...styles.blueText, marginBottom: '4px' }}>Streamers' Projected Revenue:</div>\n              <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{formatNumber(streamersRevenue)}</div>\n            </div>\n          </div>\n          \n          <div>\n            <div style={{ marginBottom: '16px' }}>\n              <div style={styles.greenBox}>\n                <div style={{ ...styles.statLabel, color: styles.greenText.color, marginBottom: '4px' }}>Your Licensing Fee:</div>\n                <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{formatNumber(baseRevenue)}</div>\n              </div>\n            </div>\n            \n            <div style={{ marginBottom: '16px' }}>\n              <div style={{ \n                padding: '16px', \n                backgroundColor: '#f5f3ff', \n                borderRadius: '4px', \n                border: '1px solid #ddd6fe',\n                marginBottom: '16px'\n              }}>\n                <div style={{ ...styles.statLabel, color: '#6d28d9', marginBottom: '4px' }}>Streamers' Profit:</div>\n                <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{formatNumber(streamersRevenue - baseRevenue)}</div>\n              </div>\n            </div>\n            \n            <div style={{ \n              padding: '16px', \n              backgroundColor: '#fef9c3', \n              borderRadius: '4px', \n              border: '1px solid #fef08a'\n            }}>\n              <div style={{ ...styles.statLabel, color: '#854d0e', marginBottom: '4px' }}>Streamers' Profit Margin:</div>\n              <div style={{ fontSize: '24px', fontWeight: 'bold' }}>{streamersProfitMargin.toFixed(1)}%</div>\n            </div>\n          </div>\n        </div>\n        \n        <div style={{ marginTop: '24px' }}>\n          <h3 style={{ marginBottom: '16px' }}>Revenue Comparison:</h3>\n          {renderComparisonBars([\n            { name: 'Your Revenue', value: baseRevenue, color: '#8884d8' },\n            { name: 'Streamers Revenue', value: streamersRevenue, color: '#82ca9d' },\n            { name: 'Streamers Profit', value: streamersRevenue - baseRevenue, color: '#ffc658' }\n          ])}\n        </div>\n      </div>\n      \n      <div style={{ \n        marginTop: '24px', \n        backgroundColor: '#e5e7eb',\n        padding: '16px',\n        borderRadius: '8px'\n      }}>\n        <h2 style={{ fontWeight: '600', marginBottom: '8px' }}>Quick Reference</h2>\n        <ul style={{ fontSize: '14px', listStyleType: 'none', padding: 0 }}>\n          <li style={{ marginBottom: '4px' }}>• BATNA: $2.5 million (VivaVideo offer)</li>\n          <li style={{ marginBottom: '4px' }}>• Minimum Acceptable: $35,000 per episode</li>\n          <li style={{ marginBottom: '4px' }}>• Target: $70,000 per episode</li>\n          <li style={{ marginBottom: '4px' }}>• Payment Timing Costs: 6 months (20%), 12 months (35%), 18 months (50%)</li>\n          <li style={{ marginBottom: '4px' }}>• Contract Length Impact: +$250K for 1 year, -$250K for 3 years, -$500K for 4 years</li>\n          <li style={{ marginBottom: '4px' }}>• Viewership Impact: $0.5-1.5M revenue per 10M viewers for Streamers</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}